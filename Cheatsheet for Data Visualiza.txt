# === Cheatsheet for Data Visualization and Analysis ===

# Import Libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
from scipy.stats import f_oneway, ttest_ind
from statsmodels.formula.api import ols
import statsmodels.api as sm

# === Load Data ===
# Example:
# df = pd.read_csv("your_dataset.csv")

# === Basic Data Information ===
print(df.head())       # Preview the first 5 rows
print(df.info())       # Data types and missing values
print(df.describe())   # Summary statistics for numeric columns
print(df.isnull().sum())  # Missing values per column

# === Univariate Visualizations ===
# 1. Histogram
plt.figure(figsize=(8, 5))
sns.histplot(df['Column'], kde=True, bins=20, color='blue')
plt.title("Histogram of Column")
plt.xlabel("Value")
plt.ylabel("Frequency")
plt.show()

# 2. Boxplot
plt.figure(figsize=(8, 5))
sns.boxplot(data=df, y="Column", color='orange')
plt.title("Boxplot of Column")
plt.ylabel("Value")
plt.show()

# 3. Countplot (for categorical data)
plt.figure(figsize=(8, 5))
sns.countplot(data=df, x="Category_Column", palette="Set2")
plt.title("Countplot of Categories")
plt.xlabel("Category")
plt.ylabel("Count")
plt.show()

# === Bivariate Visualizations ===
# 1. Scatterplot
plt.figure(figsize=(8, 5))
sns.scatterplot(data=df, x="Column1", y="Column2", hue="Category_Column", palette="viridis")
plt.title("Scatterplot of Column1 vs Column2")
plt.xlabel("Column1")
plt.ylabel("Column2")
plt.show()

# 2. Correlation Heatmap
plt.figure(figsize=(10, 8))
corr_matrix = df.corr()
sns.heatmap(corr_matrix, annot=True, cmap="coolwarm", fmt=".2f")
plt.title("Correlation Heatmap")
plt.show()

# 3. Pairplot (Explore relationships between multiple features)
sns.pairplot(df, hue="Category_Column", palette="husl")
plt.suptitle("Pairplot of Features", y=1.02)
plt.show()

# 4. Boxplot for Category vs Numeric
plt.figure(figsize=(10, 6))
sns.boxplot(data=df, x="Category_Column", y="Numeric_Column", palette="Set3")
plt.title("Boxplot of Numeric_Column by Category")
plt.xlabel("Category")
plt.ylabel("Value")
plt.show()

# === Advanced Visualizations ===
# 1. Violin Plot
plt.figure(figsize=(8, 5))
sns.violinplot(data=df, x="Category_Column", y="Numeric_Column", palette="coolwarm", inner="quartile")
plt.title("Violin Plot")
plt.show()

# 2. Residual Plot (Regression Analysis)
plt.figure(figsize=(8, 5))
sns.residplot(x=df["Predictor"], y=df["Target"], lowess=True, color="purple")
plt.title("Residual Plot")
plt.xlabel("Predictor")
plt.ylabel("Residuals")
plt.show()

# 3. Line Plot
plt.figure(figsize=(10, 6))
sns.lineplot(data=df, x="Time", y="Value", hue="Category_Column", palette="Set1")
plt.title("Line Plot Over Time")
plt.xlabel("Time")
plt.ylabel("Value")
plt.show()

# === Statistical Tests ===
# 1. ANOVA (Analysis of Variance)
groups = [df[df['Category_Column'] == level]['Numeric_Column'] for level in df['Category_Column'].unique()]
anova_result = f_oneway(*groups)
print(f"ANOVA p-value: {anova_result.pvalue}")

# 2. T-Test (Compare two groups)
group1 = df[df['Category_Column'] == 'Category1']['Numeric_Column']
group2 = df[df['Category_Column'] == 'Category2']['Numeric_Column']
t_test_result = ttest_ind(group1, group2)
print(f"T-Test p-value: {t_test_result.pvalue}")

# 3. Regression Analysis
model = ols("Target ~ Predictor1 + Predictor2", data=df).fit()
print(model.summary())  # Coefficients, p-values, RÂ², etc.

# === Tips for Customizing Plots ===
# Customize Fonts, Titles, and Style
plt.figure(figsize=(8, 5))
sns.set_style("whitegrid")  # Options: whitegrid, darkgrid, white, dark, ticks
sns.scatterplot(data=df, x="Column1", y="Column2", hue="Category_Column", palette="coolwarm")
plt.title("Custom Scatterplot", fontsize=14)
plt.xlabel("X-Axis Label", fontsize=12)
plt.ylabel("Y-Axis Label", fontsize=12)
plt.xticks(fontsize=10)
plt.yticks(fontsize=10)
plt.legend(title="Legend Title", fontsize=10)
plt.show()

# Save Plot as Image
plt.savefig("output_plot.png", dpi=300)
